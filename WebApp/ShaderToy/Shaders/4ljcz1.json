[{"ver":"0.1","info":{"id":"4ljcz1","date":"1507499234","viewed":1917,"name":"Milky way","username":"afl_ext","description":"Enjoy","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["galaxy","milkyway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat3 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n\n    return mat3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s,\n        oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s,\n        oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c);\n}\n\n\nfloat hash( float n ){\n    return fract(sin(n)*758.5453);\n}\n\n float configurablenoise(vec3 x, float c1, float c2) {\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\n\tfloat h2 = c1;\n\t float h1 = c2;\n\t#define h3 (h2 + h1)\n\n\t float n = p.x + p.y*h1+ h2*p.z;\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+h1), hash(n+h1+1.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+h2), hash(n+h2+1.0),f.x),\n\t\t\tmix( hash(n+h3), hash(n+h3+1.0),f.x),f.y),f.z);\n\n}\n\nfloat supernoise3dX(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a * b);\n}\n\nfloat fbmHI2d(vec2 p, float dx){\n   \/\/ p *= 0.1;\n    p *= 1.2;\n\t\/\/p += getWind(p * 0.2) * 6.0;\n\tfloat a = 0.0;\n    float w = 1.0;\n    float wc = 0.0;\n\tfor(int i=0;i<5;i++){\n        \/\/p += noise(vec3(a));\n\t\ta += clamp(2.0 * abs(0.5 - (supernoise3dX(vec3(p, 1.0)))) * w, 0.0, 1.0);\n\t\twc += w;\n        w *= 0.5;\n\t\tp = p * dx;\n\t}\n\treturn a \/ wc;\/\/ + noise(p * 100.0) * 11;\n}\n\nfloat stars(vec2 seed, float intensity){\n\treturn smoothstep(1.0 - intensity*0.9, (1.0 - intensity *0.9)+0.1, supernoise3dX(vec3(seed * 500.0, 0.0)) * (0.8 + 0.2 * supernoise3dX(vec3(seed * 40.0, 0.0))));\n}\nvec3 stars(vec2 uv){\n\tfloat intensityred = (1.0 \/ (1.0 + 30.0 * abs(uv.y))) * fbmHI2d(uv * 30.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat intensitywhite = (1.0 \/ (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 30.0 + 120.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat intensityblue = (1.0 \/ (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 30.0 + 220.0, 3.0) * (1.0 - abs(uv.x ));\t\n\tfloat galaxydust = smoothstep(0.1, 0.5, (1.0 \/ (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 20.0 + 220.0, 3.0) * (1.0 - abs(uv.x )));\t\n\tfloat galaxydust2 = smoothstep(0.1, 0.5, (1.0 \/ (1.0 + 20.0 * abs(uv.y))) * fbmHI2d(uv * 50.0 + 220.0, 3.0) * (1.0 - abs(uv.x )));\t\n\tintensityred = 1.0 - pow(1.0 - intensityred, 3.0) * 0.73;\n\tintensitywhite = 1.0 - pow(1.0 - intensitywhite, 3.0) * 0.73;\n\tintensityblue = 1.0 - pow(1.0 - intensityblue, 3.0) * 0.73;\n\tfloat redlights = stars(uv, intensityred );\n\tfloat whitelights = stars(uv, intensitywhite );\n\tfloat bluelights = stars(uv, intensityblue );\n\tvec3 starscolor = vec3(1.0, 0.8, 0.5) * redlights + vec3(1.0) * whitelights + vec3(0.6, 0.7, 1.0) * bluelights;\n\tvec3 dustinner = vec3(0.9, 0.8, 0.8);\n\tvec3 dustouter = vec3(0.2, 0.1, 0.0);\n\tvec3 innermix = mix(dustinner, starscolor, 1.0 - galaxydust);\n\tvec3 allmix = mix(dustouter, innermix, 1.0 - galaxydust2);\n\tvec3 bloom = 1.6 * dustinner * (1.0 \/ (1.0 + 30.0 * abs(uv.y))) * fbmHI2d(uv * 3.0, 3.0) * (1.0 - abs(uv.x ));\t\n\treturn allmix + bloom;\n}\n\nvec3 milkyway(vec2 uv){\n\treturn stars(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv *= 0.5;\n    uv.x *= iResolution.x \/ iResolution.y;\n\tvec2 pos = (rotationMatrix(vec3(0.0, 0.0, 1.0), 0.2415) * vec3(uv.x, uv.y, 0.0)).xy;\n\tfragColor = vec4(milkyway(pos),1.0);\n}","name":"Image","description":"","type":"image"}]}]