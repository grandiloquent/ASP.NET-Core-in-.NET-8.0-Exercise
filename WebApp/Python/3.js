(() => {
    const numbers = `660.214285714285,330.285714285716,660.214285714285,330.285714285716,660.214285714285,330.285714285716
    660.214285714285,359.642857142859,650.357142857142,342.071428571431,670.071428571428,377.214285714286
    687.642857142857,376.571428571429,680.785714285714,376.571428571429,694.5,376.571428571429
    712.714285714286,362.857142857145,706.714285714286,372.285714285717,718.714285714286,353.428571428572
    714.857142857143,330.285714285716,720.857142857143,341.857142857147,714.857142857143,330.285714285716
    732.857142857143,330.285714285716,732.857142857143,330.285714285716,732.857142857143,330.285714285716
    728.142857142857,339.285714285714,728.142857142857,334.571428571428,728.142857142857,339.285714285714
    727.285714285716,351.928571428574,728.785714285716,342.71428571429,725.785714285716,361.142857142859
    720.857142857143,366.071428571431,720.857142857143,366.071428571431,720.857142857143,366.071428571431
    723.857142857143,378.285714285717,719.785714285714,371.857142857147,727.928571428572,384.714285714288
    727.928571428572,384.714285714288,727.928571428572,384.714285714288,727.928571428572,384.714285714288
    729,391.357142857144,729.214285714286,384.285714285716,729,391.357142857144
    678.428571428571,389.000000000001,678.428571428571,389.000000000001,678.428571428571,389.000000000001
    664.285714285714,398.000000000001,670.285714285714,387.714285714286,658.285714285714,408.285714285716
    646.285714285714,437,646.285714285714,437,646.285714285714,437
    626.785714285714,444.285714285715,637.285714285714,448.571428571429,616.285714285714,440
    619.071428571428,429.285714285715,619.071428571428,429.285714285715,619.071428571428,429.285714285715
    625.285714285714,430.357142857142,621.214285714285,426.071428571428,629.357142857142,434.642857142856
    636.428571428571,429.928571428571,636.428571428571,429.928571428571,636.428571428571,429.928571428571
    653.142857142856,393.928571428571,646.870703162522,423.105492745055,655.863524459376,381.27252113527
    652.071428571428,367.571428571426,656.829343566682,377.087258561931,644.357142857142,352.142857142859
    645.560696438197,337.168945696061,647.219369920537,343.477049184899,644.154196819714,331.819884988898
    642.214285714287,330.285714285716,642.214285714287,330.285714285716,642.214285714287,330.285714285716
    `;
    const matches = [...numbers.matchAll(/[\d-.]+/g)].map(x => parseFloat(x[0]));
    const buffer = [];
    for (let i = 0; i < matches.length; i += 6) {
        buffer.push([
            [matches[i], matches[i + 1], 0],
            [matches[i + 2], matches[i + 3], 0],
            [matches[i + 4], matches[i + 5], 0],
        ]);
    }
    console.log(`import bpy

bpy.ops.curve.primitive_bezier_curve_add()
curve = bpy.context.active_object
bez_points = curve.data.splines[0].bezier_points
    
control_points = ${JSON.stringify(buffer)}
# note: a created bezier curve has already 2 control points
bez_points.add(len(control_points) - 2)
    
# now copy the csv data
for i in range(len(control_points)):        
    bez_points[i].co = control_points[i][0]
    bez_points[i].handle_left_type  = 'FREE'
    bez_points[i].handle_right_type = 'FREE'
          
    bez_points[i].handle_left  = control_points[i][1]
    bez_points[i].handle_right = control_points[i][2]`);
})();